% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MTAssembleHoneyHTML.R
\name{MTAssembleHoneyHTML}
\alias{MTAssembleHoneyHTML}
\title{Assemble Honey Pot HIT HTML}
\usage{
MTAssembleHoneyHTML(inputLoc = "input", content = "import",
  honeyVars = NULL, innerHTML.html = "import", innerScript.js = "import",
  hitShell.html = "import", honeyScript = TRUE, button = "honey",
  skipPattern = NULL, write.to = "console", quiet = TRUE,
  sandbox = TRUE)
}
\arguments{
\item{inputLoc}{Location where input files are. Default is \code{"input"}, which simply points to a
subdirectory of the working directory called 'input'.}

\item{content}{Content to be parsed into the HTML. The columns of Content will be matched to parameterized
\code{${parameter}} in the input files. Input can be named matrix/data.frame, or a tab-delimited file. If \code{"import"},
the function will look for a file called "content.tab" in the \code{inputLoc} file location. A different file can be specified
by passing \code{file(filename)} into the function. Content should also include answers for honey pots, as well as a justification.}

\item{honeyVars}{A string or vector of strings defining what variables that answers should be checked against.}

\item{innerHTML.html}{The HTML that is common to HITs, honey pots, and examples. Typically includes content placeholders
and questions. If \code{"import"}, the function will look for a file called "innerHTML.html" in the \code{inputLoc} file location.
Other files can be specified as above.}

\item{innerScript.js}{JavaScript that should be included with every HIT, Example, or Honey Pot. If \code{"import"},
the function will look for a file called 'innerScript.js'. Other files can be specified as above.}

\item{hitShell.html}{If \code{"import"}, function will look for a file called hitShell.html in the \code{inputLoc} file.
Other files can be specified as above.}

\item{honeyScript}{Logical. If \code{FALSE}, will create a file useful for 'examples' (e.g., checks answers, but is not
meant for posting on MTurk).}

\item{button}{Specifies which submit button configuration to use: "honey" or "example".}

\item{skipPattern}{A matrix or list of matrices containing two columns: the input name from the HTML, and the condition value.
The first row represents the condition that will trigger the skipPattern, and the subsequent rows provide the values to be
applied to the skipped inputs.}

\item{write.to}{String. If \code{"console"}, output will print in console or be available to be assigned to an object.
Otherwise, the function will assume it is a file name.}

\item{quiet}{Logical. If \code{TRUE}, additional warnings will be silenced.}

\item{sandbox}{Logical. Defines whether the HTML should be prepared for sandbox or live.}
}
\description{
Function to assemble Honey Pot HIT HTML into a single file, ready to upload to MTurk. This is useful for supplying feedback
in realtime. To use Honey Pots without feedback, just construct a normal HIT and evaluate answers on the backend.
}

